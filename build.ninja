cflags = -Wall -Werror -Wextra -ansi -pedantic -std=c99 -fsanitize=address,undefined -DDEBUG
headers = -Isrc

cflags_test = -Itest $cflags -DTEST
CC=gcc

rule cc
    deps = gcc
    depfile = $out.d
    command = $CC -MD -MF $out.d $headers $cflags -c $in -o $out

rule link
    command = $CC $in -o $out -g -fsanitize=address,undefined

rule run-test
    command = build/test > /dev/null

rule run-main
    command = build/main

build main: phony build/main
build build/main.o: cc src/main.c
build build/input_parser.o: cc src/input_parser.c
build build/commands.o: cc src/commands.c
build build/rooms.o: cc src/rooms.c
build build/entry.o: cc src/entry.c
build build/hero.o: cc src/hero.c
build build/directions.o: cc src/directions.c
build build/connectors.o: cc src/connectors.c
build build/game/game_data.o: cc src/game/game_data.c
build build/inventory.o: cc src/inventory.c
build build/dice.o: cc src/dice.c
build build/main: link $
    build/main.o $
    build/input_parser.o $
    build/commands.o $
    build/entry.o $
    build/hero.o $
    build/directions.o $
    build/connectors.o $
    build/game/game_data.o $
    build/inventory.o $
    build/dice.o

build test: phony build/test
build build/test.o: cc test/test.c
    cflags = $cflags_test
build build/extra_test.o: cc test/extra_test.c
    cflags = $cflags_test
build build/input_parser_test.o: cc src/input_parser.c
    cflags = $cflags_test
build build/commands_silent.o: cc src/commands.c
    cflags = $cflags_test
build build/entry_test.o: cc src/entry.c
    cflags = $cflags_test
build build/hero_test.o: cc src/hero.c
    cflags = $cflags_test
build build/directions_test.o: cc src/directions.c
    cflags = $cflags_test
build build/connectors_test.o: cc src/connectors.c
    cflags = $cflags_test
build build/game/game_data_test.o: cc src/game/game_data.c
    cflags = $cflags_test
build build/inventory_test.o: cc src/inventory.c
    cflags = $cflags_test
build build/dice_test.o: cc src/dice.c
    cflags = $cflags_test

build build/test: link $
    build/test.o $
    build/extra_test.o $
    build/input_parser_test.o $
    build/commands_silent.o $
    build/entry_test.o $
    build/hero_test.o $
    build/directions_test.o $
    build/connectors_test.o $
    build/game/game_data_test.o $
    build/inventory_test.o $
    build/dice_test.o $

build run-test: run-test || test

default main test run-test
